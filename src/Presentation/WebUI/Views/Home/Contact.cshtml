@{
    ViewData["Title"] = "Contact";
}

<section class="hero hero-normal">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                @await Component.InvokeAsync("AllCategories")
            </div>
            <div class="col-lg-9">
                <div class="hero__search">
                    <div class="hero__search__form">
                        <form action="#">
                            <div class="hero__search__categories">
                                All Categories
                                <span class="arrow_carrot-down"></span>
                            </div>
                            <input type="text" placeholder="What do yo u need?">
                            <button type="submit" class="site-btn">SEARCH</button>
                        </form>
                    </div>
                    <div class="hero__search__phone">
                        <div class="hero__search__phone__icon">
                            <i class="fa fa-phone"></i>
                        </div>
                        <div class="hero__search__phone__text">
                            <h5>+65 11.188.888</h5>
                            <span>support 24/7 time</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<section class="breadcrumb-section set-bg" data-setbg="/assets/img/breadcrumb.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Contact Us</h2>
                    <div class="breadcrumb__option">
                        <a href="index-2.html">Home</a>
                        <span>Contact Us</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<section class="contact spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-6 text-center">
                <div class="contact__widget">
                    <span class="icon_phone"></span>
                    <h4>Phone</h4>
                    <p>+01-3-8888-6868</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 text-center">
                <div class="contact__widget">
                    <span class="icon_pin_alt"></span>
                    <h4>Address</h4>
                    <p>60-49 Road 11378 New York</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 text-center">
                <div class="contact__widget">
                    <span class="icon_clock_alt"></span>
                    <h4>Open time</h4>
                    <p>10:00 am to 23:00 pm</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 text-center">
                <div class="contact__widget">
                    <span class="icon_mail_alt"></span>
                    <h4>Email</h4>
                    <p><a href="https://colorlib.com/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="462e232a2a290625292a29342a2f246825292b">[email&#160;protected]</a></p>
                </div>
            </div>
        </div>
    </div>
</section>


<div class="map">
    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d49116.39176087041!2d-86.41867791216099!3d39.69977417971648!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x886ca48c841038a1%3A0x70cfba96bf847f0!2sPlainfield%2C%20IN%2C%20USA!5e0!3m2!1sen!2sbd!4v1586106673811!5m2!1sen!2sbd" height="500" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>
    <div class="map-inside">
        <i class="icon_pin"></i>
        <div class="inside-widget">
            <h4>New York</h4>
            <ul>
                <li>Phone: +12-345-6789</li>
                <li>Add: 16 Creek Ave. Farmingdale, NY</li>
            </ul>
        </div>
    </div>
</div>


<div class="contact-form spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="contact__form__title">
                    <h2>Leave Message</h2>
                </div>
            </div>
        </div>
        <form method="post" id="frm" autocomplete="off">
            <div class="row">
                <div class="col-lg-6 col-md-6">
                    <div class="form-group">
                        <input type="text" name="FullName" class="form-control" placeholder="Your name" />
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <div class="form-group">
                        <input type="text" name="Email" class="form-control" placeholder="Your Email" />
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="form-group">
                        <textarea name="Message" class="form-control" placeholder="Your message"></textarea>
                    </div>
                </div>
                <div class="col-lg-12 text-center">
                    <button type="submit" class="site-btn">SEND MESSAGE</button>
                </div>
            </div>
        </form>
    </div>
</div>



@section addjs {

    <script>

        const form = document.querySelector('#frm');

        form.addEventListener('submit', function (e) {

            let element = e.currentTarget;

            e.preventDefault();

            const fd = new FormData(element);

            fetch(`${location.href}`, {
                method: 'POST',
                body: fd,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(response => {

                    document.querySelectorAll(`.form-group.validated > span,.form-group.invalidated > span`).forEach(element => {
                        element.parentElement.classList.remove('validated', 'invalidated');
                        element.remove();
                    });

                    if (response.isSuccess == true) {
                        toastr.success(response.message, "Success");
                        element.reset();
                        return;
                    }
                    else if (response.code == 400) {
                        Object.keys(response.errors).forEach(m => {
                            const input = document.querySelector(`[name='${m}']`);

                            if (input) {

                                let messageIndecator = document.createElement('span');
                                messageIndecator.textContent = response.errors[m][0];

                                input.parentNode.appendChild(messageIndecator);
                                input.parentNode.classList.add('invalidated');

                            }

                            console.log(m, response.errors[m]);
                        })
                        return;
                    }
                    else {
                        toastr.error(response.message, "Warning");
                    }


                    console.log(response);
                })
                .catch(e => {
                    console.error(e);
                });

        });

    </script>

}

@section addcss {
    <style>
        .form-group {
            margin-bottom: 20px;
        }

            .form-group > input.form-control,
            .form-group > textarea.form-control {
                margin-bottom: 2px !important;
            }

            .form-group > span {
                display: none;
                font-size: 0.9em;
                font-style: italic;
            }

            .form-group.validated > input,
            .form-group.validated > textarea {
                border: 1px solid teal;
                color: teal;
            }

            .form-group.invalidated > input,
            .form-group.invalidated > textarea {
                border: 1px solid crimson;
                color: crimson;
            }

                .form-group.invalidated > input:focus,
                .form-group.invalidated > textarea:focus {
                    box-shadow: 0 0 0 .2rem #ed143d59;
                }

                .form-group.invalidated > input + span,
                .form-group.invalidated > textarea + span {
                    display: inline-block;
                    color: crimson;
                }
    </style>
}